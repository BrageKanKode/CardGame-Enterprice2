12:31:18.489 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
12:31:18.500 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
12:31:18.529 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [org.enterpris2.cardgame.scores.db.UserStatsServiceTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
12:31:18.546 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.enterpris2.cardgame.scores.db.UserStatsServiceTest], using SpringBootContextLoader
12:31:18.551 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [org.enterpris2.cardgame.scores.db.UserStatsServiceTest]: class path resource [org/enterpris2/cardgame/scores/db/UserStatsServiceTest-context.xml] does not exist
12:31:18.551 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [org.enterpris2.cardgame.scores.db.UserStatsServiceTest]: class path resource [org/enterpris2/cardgame/scores/db/UserStatsServiceTestContext.groovy] does not exist
12:31:18.551 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [org.enterpris2.cardgame.scores.db.UserStatsServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.
12:31:18.552 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [org.enterpris2.cardgame.scores.db.UserStatsServiceTest]: UserStatsServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
12:31:18.673 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [C:\Users\bragg\OneDrive\Documents\Skole\5.semester\Enterpriceprogrammering 2\CardGame-Enterprice2\scores\target\classes\org\enterpris2\cardgame\scores\Application.class]
12:31:18.685 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration org.enterpris2.cardgame.scores.Application for test class org.enterpris2.cardgame.scores.db.UserStatsServiceTest
12:31:18.777 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [org.enterpris2.cardgame.scores.db.UserStatsServiceTest]: using defaults.
12:31:18.777 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
12:31:18.792 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@61bcd567, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1c80e49b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@458342d3, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@15c25153, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1252b961, org.springframework.test.context.transaction.TransactionalTestExecutionListener@9ed238c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@56276db8, org.springframework.test.context.event.EventPublishingTestExecutionListener@51e8e6e6, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@56f6d40b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@36676c1a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5b408dc3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4d098f9b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2dbf4cbd]
12:31:18.797 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@7d3430a7 testClass = UserStatsServiceTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f603e89 testClass = UserStatsServiceTest, locations = '{}', classes = '{class org.enterpris2.cardgame.scores.Application}', contextInitializerClasses = '[]', activeProfiles = '{FakeData,test}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@436c81a3, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7c214cc0, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@8e50104, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6f44a157, org.springframework.boot.test.context.SpringBootTestArgs@1], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
12:31:18.809 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@7d3430a7 testClass = UserStatsServiceTest, testInstance = org.enterpris2.cardgame.scores.db.UserStatsServiceTest@10fde30a, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6f603e89 testClass = UserStatsServiceTest, locations = '{}', classes = '{class org.enterpris2.cardgame.scores.Application}', contextInitializerClasses = '[]', activeProfiles = '{FakeData,test}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@436c81a3, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7c214cc0, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@8e50104, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6f44a157, org.springframework.boot.test.context.SpringBootTestArgs@1], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]].
12:31:18.833 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.3.3.RELEASE)

2020-10-17 12:31:19.179  INFO 664 --- [           main] o.e.c.scores.db.UserStatsServiceTest     : Starting UserStatsServiceTest on DESKTOP-77QGOLO with PID 664 (started by bragg in C:\Users\bragg\OneDrive\Documents\Skole\5.semester\Enterpriceprogrammering 2\CardGame-Enterprice2\scores)
2020-10-17 12:31:19.179  INFO 664 --- [           main] o.e.c.scores.db.UserStatsServiceTest     : The following profiles are active: FakeData,test
2020-10-17 12:31:19.589  WARN 664 --- [kground-preinit] o.s.h.c.j.Jackson2ObjectMapperBuilder    : For Jackson Kotlin classes support please add "com.fasterxml.jackson.module:jackson-module-kotlin" to the classpath
2020-10-17 12:31:20.735  INFO 664 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFERRED mode.
2020-10-17 12:31:20.793  INFO 664 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 51ms. Found 1 JPA repository interfaces.
2020-10-17 12:31:21.097  INFO 664 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-17 12:31:21.271  INFO 664 --- [           main] o.f.c.internal.license.VersionPrinter    : Flyway Community Edition 6.3.1 by Redgate
2020-10-17 12:31:21.278  INFO 664 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-10-17 12:31:21.485  INFO 664 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-10-17 12:31:21.509  INFO 664 --- [           main] o.f.c.internal.database.DatabaseFactory  : Database: jdbc:h2:mem:db (H2 1.4)
2020-10-17 12:31:21.588  INFO 664 --- [           main] o.f.core.internal.command.DbValidate     : Successfully validated 1 migration (execution time 00:00.027s)
2020-10-17 12:31:21.614  INFO 664 --- [           main] o.f.c.i.s.JdbcTableSchemaHistory         : Creating Schema History table "PUBLIC"."flyway_schema_history" ...
2020-10-17 12:31:21.658  INFO 664 --- [           main] o.f.core.internal.command.DbMigrate      : Current version of schema "PUBLIC": << Empty Schema >>
2020-10-17 12:31:21.663  INFO 664 --- [           main] o.f.core.internal.command.DbMigrate      : Migrating schema "PUBLIC" to version 1.0 - createDB
2020-10-17 12:31:21.680  INFO 664 --- [           main] o.f.core.internal.command.DbMigrate      : Successfully applied 1 migration to schema "PUBLIC" (execution time 00:00.028s)
2020-10-17 12:31:21.770  INFO 664 --- [           main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-10-17 12:31:21.839  INFO 664 --- [         task-1] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-10-17 12:31:21.940  INFO 664 --- [         task-1] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.10.Final}
2020-10-17 12:31:22.082  INFO 664 --- [         task-1] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-10-17 12:31:22.471  INFO 664 --- [         task-1] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-10-17 12:31:22.901  INFO 664 --- [         task-1] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-10-17 12:31:22.912  INFO 664 --- [         task-1] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
2020-10-17 12:31:24.314  INFO 664 --- [           main] DeferredRepositoryInitializationListener : Triggering deferred initialization of Spring Data repositories…
2020-10-17 12:31:24.315  INFO 664 --- [           main] DeferredRepositoryInitializationListener : Spring Data repositories initialized!
2020-10-17 12:31:24.327  INFO 664 --- [           main] o.e.c.scores.db.UserStatsServiceTest     : Started UserStatsServiceTest in 5.491 seconds (JVM running for 6.496)
Hibernate: select count(*) as col_0_0_ from user_stats userstats0_
Hibernate: select userstats0_.user_id as user_id1_0_, userstats0_.defeats as defeats2_0_, userstats0_.draws as draws3_0_, userstats0_.score as score4_0_, userstats0_.victories as victorie5_0_ from user_stats userstats0_ order by userstats0_.score DESC, userstats0_.user_id DESC limit ?
Hibernate: select count(*) as col_0_0_ from user_stats userstats0_
Hibernate: select count(*) as col_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: select userstats0_.user_id as user_id1_0_0_, userstats0_.defeats as defeats2_0_0_, userstats0_.draws as draws3_0_0_, userstats0_.score as score4_0_0_, userstats0_.victories as victorie5_0_0_ from user_stats userstats0_ where userstats0_.user_id=?
Hibernate: insert into user_stats (defeats, draws, score, victories, user_id) values (?, ?, ?, ?, ?)
Hibernate: select count(*) as col_0_0_ from user_stats userstats0_
